* change return option of menu to 0. : easier
* add checks for missing menu items etc to ph_check_pieh_configured
* split confapps_ph.sh into confapps_ph.sh and confttys_ph.sh and change menus to use new script
* add check for no routine options used for apps not Unused and Out-of-scope
* change confapps_ph.sh to allow add mention -a option mainly but not exclusively for Unused Out-of-scope applications
* handle having predefined installation states in default_apps_* files
* rename other CTRL options such as NUM_CTRL etc EVERYWHERE.... sigh
* finish colour of scripts plus add examples to all scripts
* rename some vars in confapps_ph.sh to use _PH_APP_ (aesthetic)
* now rewrite ph_do_app_routine
* Rename OS.defaults to System.Retaineds
* check everywhere where needed for *I installation state of the app or create general function that can be called for whatever 'action' that handles all such checks centralized
* make option PH_PIEH_STARTAPP read-write
* check why so many Appstate menus are listed as parents in all deep submenus
* finish new menu structure in ph_show_menu : what with application menus and are Go to parent menus for all ok ?
* finish change with menu app linked stuff in ph_remove_app_menus
* adapt ph_check_pieh_configured and ph_repair_pieh to new menu structure and remove comments in main.sh
* test new menu structure and adapt code ordering for esthaetics where required
* use new PH_RET_CODE var in ph_show_menu to allow for stuff like unsupport/uninstall piehelper etc
* add argument check stuff to ph_do_app_action
* update confopts_ph.sh and confoper_ph.sh and confapps_ph.sh to be compatible with all new changes to menu
* create new toggle option for enabling/disabling variable expansion and adapt scripts and menus to use it
* add support for new XBOX controller
* create and source a new config file for user-defined variables + mention in *_conf.template files
* maybe also resolve function for dynamic var ?
* add optional PH_'APPU'_STOP_CMD (and also STOP_CMD_OPTS ???)' for each application and rename _CMD and CMD_OPTS to same with a leading _START_
* use ph_resolve_dynamic_value in ph_get_app_pkg functions and possibly more
* use ${var?} for usage of directory vars
* recheck correct unsetting of any code containing arrays
* create function to retrieve all options for an app and use in store/retrieve functions + maybe elsewhere + better handling of possible returned errors
* check functions concerning CIFS in functions.update for resolving of possible variables in values for CIFS_DIR and CIFS_SUBDIR + maybe others ? --> Check conf file templates
* run check of code for instances of abovementioned auto-resolving of possible variables in option values -> Should not be \$$ !!!
* add quiesce to or quiet function ph_update_base_conf_file
* continue with declares first in functions (work partly up from ph_get_app_name_from_app_tty) + main.sh
* adapt REAMD.md with changes such as installation states etc
* reimplement recursive chown and chperms to speed things up
* implement rollback for ph_update_pkg -> need to update all functions in functions.Debian/Archlinux to work with package versions
* change package removal functions for auto uninstall dependendies that were installed with
* create expect for moonlight pairing
* create a function for PH_APP_GRAPH and PH_APP_EXEC determination and replace instances with calls to function
* in ph_support_app : handle manually entered start commands : if packaged and file belongs to different package : update PKG option + in all cases also update start command
* handle ph_install_app paramaters for user better : (optional since can also come from supported_apps)
* handle changes of *_PKG options by ph_set_option_to_value -> auto change application installation state in supported_apps and run ph_uninstall_app (+ ph_install_app or not ??) when required
* continue with rollback function ph_create_app_user (and add vars to main.sh + create counteraction function) + reflect changes related to use of ph_grant_pieh_access etc + create function for quit with auto rollback and adapt calls where quit is used + verify quit with warning code in ph_check_app_user + reflect other changes to unintegrate, integrate, unsupport app and add/remove to/from support/integrate files functions + change verify code of other functions calling to changed ph_check_app_user function
* check if passing PH_APP_INST_STATE is still required between ph_support_app/ph_unsupport_app
* Make use of ph_check_app_state_validity and ph_get_app_list_by_state functions where possible
* When chosing to skip supporting ph_suppport_app (2 places) -> manually modify so far added rollback params etc or not ?
* check what to do with auto_update_denied
* check if PH_MOVE_SCRIPTS_REGEX and function for it are still required. Remove if not
* remove all references to ph_total_result stuff
* remove ph_set_variable stuff
* check for double function definitions in functions and check for doubles in ph_rollback_changes
* make sure when running functions with quiesce enabled that no results are set
* bug : detects piehelper as already active + does not switch to active tty on piehelper startup or does he ?
* check why mnt/App dirs not being created with piehelper (at least not mnt/PieHelper on initial configure): change
* change content of bullseye.conf to appropriate values
* extra output comments for package update : is irreversible and may take a while
* further process whether all actions for a piehelper configuration are now under correct rollback control : including '-c true|-c false' or manual OK/ERROR print with ph_set_result
* reflect changes for ph_set_option_to_value to confopts_ph.sh
* add check function a la those for ip and users etc for cifs mountpoints : are they valid ? + implement use where needed
* and there was one more check function that could be useful to write but which one ?
* implement rename of ph_create_app_dir and ph_remove_app_dir -> 'cifs_mpt' replaces 'dir'
* scan code for evals and other occurences of _CIFS_MPT and change code to use new ph_get_app_cifs_mpt function
* create option for selection of Xserver
* implement option for limit menu size on screen to 1080p
* implement option of default app to start on other app exit or start piehelper on exit of default app or do nothing if the default app is also piehelper : also check doing so only if calling script is not move/restart/stop script
* add ph_remove_default_base_conf_file function + rollback
***
* do away with ph_store_options shit in confapps_ph.sh
* change file quoting everywhere left to do
* check all function param checks in place and check OPTIND and OPTARG resets in place everywhere for getopts early return 1's
* replace stored_options with set_to_default
* keep way of not running rollback for all three 'all' functions or not ?
* remove ph_secure_pieh where no longer needed if in place in all .update functions that require it
* change store_file to use other file functions
* exclude special backuped files in PH_FILES_DIR from ph_secure_pieh
* todo : investigate why such issues when piehelper no allocated TTY for starting other apps : ultimate goal is to make piehelper menu optional to support and integrate
* add support for removing and creating functions.user stuff where required
* create full support for ph_install_app and ph_remove_app
* write code for prompting into confapps_ph.sh and ph_do_app_routine params for them
* look into possibly providing more specific result messages for failed ph_do_app_routine calls
* check for need of PH_ROUTINE_FLAG and stuff into ph_do_app_routine : probably an easier solution
* introduce ph_run_with_rollback into ph_do_app_routine !!!!
* is function ph_get_option_value_from_app_conf_file still useful somewhere ? -> then use otherwise delete
* change ph_create and ph_remove_empty_file and possibly also ph_store and ph_restore_file to also use perms and ownership
* CIFS backup of archives in confgena does not work + how to handle not running rollback stuff in ph_create and ph_remove app_items when called from unint/unsup/sup or unsup functions
* change ph_check_pieh_configured and unconfigured to use ph_check_object_existence
* possible to write something to autodetect replaced packages automatically ?
* change create_conf_file and defaults and alloweds to use ""'s for variables and retest everything
* create function for getting list of supported_apps or integrated_apps or default_apps and use everywhere
* create functions for setting a variable to a value for rollback purposes
* change ph_set_app_options_to_default_value in menus to call to confopts (implement first)
* creating separate lines for each derivate creation and removal of defs, allows, menus ?
* add a mk_dirs and rm_dirs option to confapps_ph.sh and ph_do_app_routine + check if possible to easily replace method for mk_* and rm_* with ph_create|remove_app_items call
* rename functions stuff everywhere to modules
* change info in conf files for allowed values of NUM_CTRL and something else
* add extra typesets in conf file templates for integers ?
* check PH_APP_CMD resolution already in ph_get_app_cmd_from_app_name is doable and remove all remaining other resolves if so
* add prompts for required info to ph_(un)support_app, ph_(un)integrate_app
* add detection of PH_EVENT in CMD_OPTS in ph_set_option and auto-change PH_RUNAPPU_USE_CTRL
* test and if ok remove line ph-run-account always created on CIFS_SRV in all conf file templates
* change PH_APP_PKG resolution with extra eval for OOSapp package default or not ? how added ?
* add also extra evals in all PRE and POST scripts where needed
* Migrate emulationstation check and it's option settings to separate function and call it when supporting Emulationstation instead of ph_configure_pieh
* write function ph_check_base_conf_file_validity
* why PH_ROLLBACK_PARAMS empty when running confgena_ph.sh
* now error unmounting cifs share in popst scripts when stopping app ??
* replace default base conf file for integrated_apps with empty file and change all stuff affected by that change
* libcurl4 replaces libcurl4 on new debian
* implement additional options for confgena archive selection
* Add initial unset of startapp and initial remove of only additional acls and path extension to ph_repair_pieh
* ph_show_result for returns in ph_repair_pieh
* Disable all tty's instead of enabling all on configure time OK ?
* At configure_time : also edit /etc/X11/Xwrapper.config with allowed_users=anybody and needs_root_rights=yes needed ?
* permissions are added for new users after generating app items : NOT OK
* change nawk _tmp files to "$PH_TMP_DIR"
* OS.defaults backup cannot be created : permission problem ? Also check other post and pre actions for same problem :  test if now OK ?
* change all ph_set_result and ph_show_result calls to reflect changes
* test result prints for ph_do_app_routine in case of failures
* finish tests and man of new confapps_ps.sh
* finish rewrite of confgena_ph.sh (with developer mode etc)
* change all result prints to use colour coded function
* rewrite all new changes into action scripts and regenerate everything before generating build
* change ph_do_app_action again to be correct for back to original done and now : confopts get
* attention for restart stopped app that was running on a pts
* check and change ange ph_restore_options and ph_set_option_to_default for reason above
* check set and export old value that was changed in ph_set_option
* change ph_set_option to ph_set_option_value
* change confopts to use new expansion functions
* replace all instances of FILES/CONF/TMP/MAIN/MENUS with BASE dir
* checks for PieHelper -p detects on boot
* perms still not applied correctly after confpieh_ps.sh -v ?
* Check and change where needed : ph_get_thing_from_login_script and autologin functions for RUNAPP->APP change
* change everywhere where appropriate to use new ph_stop_all_running_apps function
* THINGS remaining for working repair : cifs checks to add, double instances in conf files checks to add, and completely rewrite all startapp related code + implement better handling for startapp repair than just reset to PieHelper in ph_repair + even reset not workin now
* review all for i in "$var" statements that i didn't quote the var where it  shouldn't be !!!
* investigate possibility of replacing separate create scripts in ph_repair with ph_create_app_items
* add CIFS mount check in ph_update and test ph_update
* why crazy stuff remains in ph_change_app_opt_values with nameref needing echo ?
* rewrite confgena_ph.sh to now use new scripts in functions.update
* implement default_apps everywhere
* Only generate movescripts if other app is also integrated
* add display error capability when launching start scripts from command line and receiving failed result
* use secure_pieh and ph_create_all_acls after every mv after a file modification
* better error handling in many places

* create function for applying default permissions and use everywhere
* change CMD_OPTS for moonlight and possibly all var values and in conf files etc to always have quotes around varnames + implement in update scripts
* adapt confpieh_ph.sh for better Result integration AND performance
* add support for immediately resolving string replacement and bash replacement for APP_CMDs in ph_get_app_cmd_from_app_name and implement where useful
* move all FAILED and SUCCESS statements from ph_set_app_for_start to caller scripts
* change menu entries for ph_configure_app_options to confopts_ph.sh call
+
* change menu entries for ph_update_app to confapps_ph.sh call
* correct line in ph_setup_controllers with eval where options are still unquoted
* add another space between each \033[36 header and all results and another one before each 'RESULT' print at the end for improved readability
* move OS.defaults , alloweds, defaults and controller_cli_ids to conf dir
* Remember and check everywhere now PieHelper should always be integrated and supported and only PieHelper for base_config _apps files except default
* change ph_configure_pieh to also set link to PieHelper if needed
* still looping in confgena_ph when certain conditions of repair_required
* Why *CIFS_USER not correctly reset to old value when confgena_ph.sh fails ?
* add CIFS info to HOWTO
* update all code to use all new functions
* change HOWTO to reflect new script functionalities
* developer only option for confgena_ph.sh
* detect existing custom TTY configurations on PieHelper configure and offer to delete, else exit
* modify confpieh manpage about repair
* check if PH_OPTION thing in rollback needs to be replaced with a 'shift' solution
* cmd modification in supported_apps in old version of ph_get_app_user_from_input really no longer needed now ?
* write prompting for cmd in ph_support_app
* Create rollback for create and restore emul (ph_restore_emul etc) and implement where needed
* Check all --> arrows in scripts dir scripts and main.sh and distros files for double arrows
* Retropie dir detect good with emul run user ?
* Correct all scripts code for correct quoting of variables
* adapt all menus to new code
* implement daily auto-update option
* create function for adding a user : steal from 'confoper_ph.sh' ?
* change ph_revoke for prompt for user removal
* add remaining colour coding
* add support for -o parameter to confopts_ph.sh -p prompt -s -o XXXX and make changes for that in ph_configure_app_options + reflect in menus if needed
* add option for confopts_ph.sh to list option default(s) + add to menus
* add option for confopts_ph.sh to set option(s) to defaults + reflect in menus
* check reminderlike displays for similar output formatting
* additional option for confopts_ph.sh to only act on variables with a value different from 'N/A' and ''
* add userdel function in confoper_ph.sh and menus
* change no-root restriction in confoper_ph.sh user modify operations to no-system users
* add skip option to all lists in confoper_ph.sh interactive modes
* change 'prompt phase' of confoper_ph.sh -p savedef to 'parameter phase' for all modes
* check problem for non-working supported locales in confoper_ph.sh. Not installed ?
* add a get currently configured values function in confoper_ph.sh and add to menus
* add a remdef function for confoper_ph.sh and add to menus
* add functionality for passing a list of functions to confoper_ph.sh -p savedef -i instead of just one
* unsets in confoper_ph.sh
* check confoper_ph.sh for cases when PH_RUN_USER is 'root'
* test correct quit for moonlight streaming on PTS and TTY
* update Wiki with reference and download links
* change -m option to not permanently change option value for piehelper start location or not ?
* replace prompts in OS configuration functions for timezone, etc with lists of possible options
* add check for mount present in ph_umount_cifs and generate warning if not
* write backup and restore functionality for Pi in OS section based on confgena_ph.sh non-developer tar generation and new restore option
* change xboxdrv mapping to xbox controller(s) in ph_setup_controllers for all but PS4 usb to correct mappings 
* add menu choice or script/module to move PieHelper to a different location
* test if Emulationstation savegames require mount as $PH_RUNAPP_USER for CIFS authentication
* add confoper_ph.sh splash screen management module
* support for bluetooth devices distributed over multiple adapters in confctrl_ph.sh
* test archlinux
* controller detection for XBOX360 usb receiver
* solve bluetooth pairing dualshock3 controllers
* change workings confoper_ph.sh to reflect already trusted controllers
* incremental backup for Kodi autobackup OR switch to only use CIFS option for kodi on remove and install Kodi + change related conf file information
* use _CMD_OPTS for all apps as well as in supported_apps configuration file for all but basic start command + general impact on way graphical applications are handled
* using kodi + cmd_opts -> kodi num_ctrl can no longer be read-only
* keyword "all" support for confopts_ph.sh interactive and non-interactive set
* re-examine possibility of using ph_show_menu 'Menu' instead of startpieh.sh in integrated_apps for PieHelper
* create button configuration files for the different controller types for emulationstation with configure script
* change confpieh_ph.sh -p debug for partial results and for fasttrack bypass to set all modules to debug/no debug 
* occasional cifs mount problem for Emulationstation + test extended use session
* additional option for application restarts to not auto-switch to TTY restarted app + check compatibility with Kodi, Emulationstation and Moonlight
* check for /etc/apt/apt.conf on debian and turn off option don't install recommended packages
* test for controllers actually online
* support for using a mix of different controller types
* add limit check for oos aaps or test from menus to see if increase in PH_PIEH_MAX_TTYS viable or not and if so : remove limit check
* recursive going back to original settings when error occured ala confgena also in other places
* empty line remains in functions.user
* test second controller input
* test ph_remove_pieh from menus and through confpieh_ph.sh
* hashing of passwords functionality
* test graphical stuff
* test and support all other linux-based distros
* REST interface for calling scripts and android app : use vtutil && android app
* package version with or without dependencies ? (with could possibly change scripts f.e. required packages no longer needed ?)

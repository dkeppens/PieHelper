# General PieHelper configuration
# Do NOT edit the configuration files manually. Always use PieHelper to make changes

# Read-only variables

declare -ir PH_PIEH_MAX_TTYS='12'							# - This specifies the highest TTY number allocatable to applications
											# - Default is '12'
											# - This value is read-only
declare -r PH_PIEH_USE_CTRL='no'							# - This indicates whether you want to use controllers with PieHelper or not
											# - Controller type to be used and the toggle for optional mapping with xboxdrv should be configured separately using 'confopts_ph.sh'
											#   or the PieHelper menu
											# - The amount of controllers to use can be set with option PH_PIEH_NUM_CTRL
											# - If this is set to 'yes' and the specified amount of controllers of the type configured can not be detected on PieHelper startup,
											#   startup will fail
											# - Default is 'no'
											# - This value is read-only
declare -ir PH_PIEH_NUM_CTRL='1'							# - This is the number of controllers you want to use with PieHelper
											# - Changes to an option that sets the controller amount for an application will automatically be reflected to
											#   the option holding that application's command line options if event-based input devices are present as command-line parameters
											# - Default is '1'
											# - Allowed values are '1', '2', '3' and '4'
											# - This value is read-only

# Read-write variables

PH_PIEH_PERSISTENT='yes'								# - This indicates whether PieHelper, when active, should be kept running, either on it's allocated TTY or it's pseudo-terminal
											#   whenever any application other than PieHelper starts
											#   Persistent applications will only stop when a direct stop or restart is issued
											# - Any time PieHelper is started on it's allocated TTY, PH_PIEH_PERSISTENT will be set to 'yes'
											# - Any time a start operation for any other application than PieHelper fully completes, PieHelper will terminate if running on it's TTY
											# - Default is 'yes'
											# - Allowed values are 'yes' and 'no'
											# - Important : * If an application does not render to the default frame buffer it can stay visible in foreground when switching to
											#                 a TTY that is allocated to a persistent-marked application
											#               * That behaviour can be avoided by setting persistence to 'no' for both applications
PH_PIEH_DEBUG=''									# - This is a comma-separated list of PieHelper modules to run with xtrace (debug) enabled
											# - Default is ''
											# - Allowed values are any relevant PieHelper modules
											# - Relevant module names are defined as all PieHelper script names and any PieHelper functions relevant to the Operating system being used
PH_PIEH_SANITY_INST='yes'								# - This indicates whether PieHelper should run sanity checks on installed files each run
											# - Installation sanity checks will detect missing files in the current PieHelper instance and exit on the first error
											# - Disabling this will slightly boost performance but errors due to missing files will not pre-emptively be caught
											# - Default is 'yes'
											# - Allowed values are 'yes' and 'no'
PH_PIEH_SANITY_CONF='yes'								# - This indicates whether PieHelper should additionally run configuration sanity checks on each run
											# - Configuration sanity checks will detect any possible issues with the current configuration and display a complete report if any are found
											# - Disabling this will slightly boost performance but any configuration errors will not pre-emptively be caught
											# - Default is 'yes'
											# - Allowed values are 'yes' and 'no'
PH_PIEH_SANITY_LEVEL='optional'								# - This indicates the level of any sanity checks PieHelper performs on each run
											# - The level determines the data set to be checked
											# - Lower levels will slightly boost performance but errors from unchecked levels will not pre-emptively be caught
											# - Default is 'optional'
											# - Allowed values are
											#   * critical : Checks will only be made on items required for basic application management such as supporting, integrating, starting, stopping, etc..
											#   * optional : Checks will include both critical items and items related to optional features such as
											#         CIFS management, PRE/POST commands, Controllers, Out-of-scope applications, user-defined framework extensions, etc..
											#   * full     : Checks will include critical, optional and unused items such as
											#         those required by different Linux distros/releases and various miscellaneous files
PH_PIEH_STARTAPP='none'									# - This is the application that will start automatically at system boot time, or StartApp
											# - Allowed values are 'none' or the name of a Supported application
PH_PIEH_CMD_OPTS='Main'									# - These are the command line options you want to launch PieHelper with and the specific menu you wish PieHelper to start in
											# - Amongst others, this can be used for passing event-based input devices when required as parameters by PieHelper
											#   When passing event-based input devices, replace the numeric id in the device reference with the string 'PH_CTRL%' where
											#   where '%' is '1' for device 1, '2' for device 2, etc
											# - Changes to an option for an application's command line options where event-based input devices are present will automatically be reflected to
											#   the application's option determining the controller amount unless all event device parameters are being removed
											# - Default is 'Main'
											# - Allowed values are :
											#   - 'Main' or 'Controllers' or 'Apps' or 'Advanced' or 'Settings' or
											#   - 'PS3' or 'PS4' or 'XBOX360' or
											#   - 'AppManagement' or 'AppManagement_[appname]' where [appname] is the name of a supported application, e.g. 'AppManagement_PieHelper'
											#   - 'OptsManagement' or 'OptsManagement_[appname]' where [appname] is the name of a supported application, e.g. 'OptsManagement_PieHelper'
											#   - 'TTYManagement' or 'TTYManagement_[appname]' where [appname] is the name of a supported application, e.g. 'TTYManagement_PieHelper'
PH_PIEH_PKG_NAME=''									# - This is the package name for PieHelper if available
											# - Default is ''
											# - Variables can be used as part of or instead of the normal value
PH_PIEH_CIFS_SHARE='no'									# - This indicates whether you want to mount a CIFS share from a local network server PH_PIEH_CIFS_SRV before PieHelper starts and
											#   umount it after PieHelper shuts down
											#   A value of 'yes' will be ignored when starting or stopping PieHelper on a pseudo-terminal
											# - Additionally, this also determines whether you want to make a CIFS backup of any build or snapshot archives
											#   generated by 'confgena_ph.sh'
											# - Default is 'no'
											# - Allowed values are 'yes' and 'no'
											# - Important : * Keep in mind that setting this to 'yes' requires you to enable CIFS sharing on PH_PIEH_CIFS_SRV
											#               * You should also make sure your PI has adequate permissions to access that share
											#               * Enable UNIX permissions functionality on your CIFS server if available
											#               * Lastly, a user account PH_PIEH_CIFS_USER with a password PH_PIEH_CIFS_PASS should be created on PH_PIEH_CIFS_SRV
											#               * Check PH_PIEH_CIFS_USER help for more information on specific rules applicable to PH_PIEH_CIFS_USER values
PH_PIEH_CIFS_USER=''									# - This is the user account on local network server PH_PIEH_CIFS_SRV with password PH_PIEH_CIFS_PASS
											#   if PH_PIEH_CIFS_SHARE is set to 'yes'
											# - PH_PIEH_CIFS_USER should always be created on PH_PIEH_CIFS_SRV and granted read-write rights to the share
											# - PieHelper's run account PH_RUN_USER should always be created on PH_PIEH_CIFS_SRV and granted read-write rights to the share
											# - Default is ''
											# - Allowed values are locally existing accounts and an empty string
PH_PIEH_CIFS_PASS=''									# - This is the password for user PH_PIEH_CIFS_USER on local network server PH_PIEH_CIFS_SRV if PH_PIEH_CIFS_SHARE is set to 'yes'
											# - The password should not contain any single quote (') characters
											# - Default is ''
PH_PIEH_CIFS_SRV=''									# - This is the ip address of your local network server where CIFS sharing is enabled if PH_PIEH_CIFS_SHARE is set to 'yes'
											# - Default is ''
											# - Allowed values are valid ipv4 addresses and an empty string
PH_PIEH_CIFS_DIR=''									# - This is the pathname of the CIFS share on local network server PH_PIEH_CIFS_SRV if PH_PIEH_CIFS_SHARE is set to 'yes'
											# - Default is ''
											# - Allowed values are values starting with '/' and an empty string
											# - Variables can be used as part of or instead of the normal value
PH_PIEH_CIFS_SUBDIR=''									# - This is the pathname relative to PH_PIEH_CIFS_DIR on local network server PH_PIEH_CIFS_SRV that will be mounted on PH_PIEH_CIFS_MPT
											#   if PH_PIEH_CIFS_SHARE is set to 'yes'
											# - Additionally, for PieHelper, this is also the location where backup copies of build and snapshot archives will be stored
											# - Default is ''
											# - Allowed values are values starting with '/' and an empty string
											# - Variables can be used as part of or instead of the normal value
PH_PIEH_CIFS_MPT='${PH_MNT_DIR}/PieHelper'						# - This is the full pathname of a directory on your PI where you want to mount PH_PIEH_CIFS_SUBDIR if
											#   PH_PIEH_CIFS_SHARE is set to 'yes'
											# - A default directory 'mnt' with a subfolder named after the application is automatically created under the PieHelper root
											#   directory but other values can be set if preferred
											# - Non-existing pathnames will be recursively created
											# - Existing pathnames should be empty directories
											# - Default is '${PH_MNT_DIR}/PieHelper'
											# - Allowed values are values starting with '/' and an empty string
											# - Variables can be used as part of or instead of the normal value
PH_PIEH_PRE_CMD='${PH_SCRIPTS_DIR}/app/pre_cmds/PieHelper-PRE.sh'			# - This is the full command to run before starting PieHelper
											# - PRE-commands are always executed as the run account for the application being started which should be granted adequate
											#   permissions
											# - PRE-commands that fail will only generate a warning and not block further PieHelper startup
											# - In case PH_PIEH_PRE_CMD makes use of default PieHelper CIFS configuration, PieHelper's run account should be present on PH_PIEH_CIFS_SRV with
											#   share permissions required by PH_PIEH_PRE_CMD
											# - Default is '${PH_SCRIPTS_DIR}/app/pre_cmds/PieHelper-PRE.sh' which will restore a backup copy of the 'OS.defaults' file,
											#   which stores all previously configured default values for 'confoper_ph.sh' OS configuration functions,
											#   from PH_PIEH_CIFS_SUBDIR on PH_PIEH_CIFS_SRV if one is found and CIFS for PieHelper is correctly configured
											#   with a user for PieHelper's run account having read-write access to the share
											# - Allowed values are an empty string and valid pathnames of scripts, sourceable scripts or executables
											# - Variables can be used as part of or instead of the normal value
											#   Sourceable scripts can use variable names known to PieHelper
PH_PIEH_POST_CMD='${PH_SCRIPTS_DIR}/app/post_cmds/PieHelper-POST.sh'			# - This is the full command to run after stopping PieHelper
											# - POST-commands are always executed as the run account for PieHelper '${PH_RUN_USER}' which should be granted adequate
											#   permissions
											# - POST-commands that fail will only generate a warning
											# - In case PH_PIEH_POST_CMD makes use of default PieHelper CIFS configuration, PieHelper's run account should be present on PH_PIEH_CIFS_SRV with
											#   share permissions required by PH_PIEH_POST_CMD
											# - Default is '${PH_SCRIPTS_DIR}/app/post_cmds/PieHelper-POST.sh' which will create a backup copy of the 'OS.defaults' file,
											#   which stores all previously configured default values for 'confoper_ph.sh' OS configuration functions,
											#   in PH_PIEH_CIFS_SUBDIR on PH_PIEH_CIFS_SRV if any configured defaults are found and CIFS for PieHelper is correctly configured
											#   with a user for PieHelper's run account having read-write access to the share
											# - Allowed values are an empty string and valid pathnames of scripts, sourceable scripts or executables
											# - Variables can be used as part of or instead of the normal value
											#   Sourceable scripts can use variable names known to PieHelper

# Read-only exports

export PH_PIEH_MAX_TTYS PH_PIEH_NUM_CTRL PH_PIEH_USE_CTRL

# Read-write exports

export PH_PIEH_PERSISTENT PH_PIEH_DEBUG PH_PIEH_SANITY_BASIC PH_PIEH_SANITY_EXTENDED PH_PIEH_SANITY_LEVEL PH_PIEH_STARTAPP \
	PH_PIEH_CMD_OPTS PH_PIEH_PKG_NAME PH_PIEH_CIFS_SHARE PH_PIEH_CIFS_USER PH_PIEH_CIFS_PASS PH_PIEH_CIFS_SRV \
	PH_PIEH_CIFS_DIR PH_PIEH_CIFS_SUBDIR PH_PIEH_CIFS_MPT PH_PIEH_PRE_CMD PH_PIEH_POST_CMD

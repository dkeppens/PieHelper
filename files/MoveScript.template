#!/bin/bash
# Run '#PH_APP#' to '#PH_APP2#' move action (by Davy Keppens on 04/10/2018)
# Enable/Disable debug by running 'confpieh_ph.sh -p debug -m #PH_APPL#to#PH_APPL2#.sh'

. "$(dirname "$0")"/../main/main.sh || exit "$?" && set +x

#set -x

declare PH_RUNAPP="#PH_APP2#"
declare PH_STOPAPP="#PH_APP#"
declare PH_OPTION=""
declare PH_OLDOPTARG="$OPTARG"
declare -i PH_OLDOPTIND="$OPTIND"
declare -i PH_FG_CONSOLE="0"
declare -i PH_STOPAPP_TTY="0"
declare -l PH_RUNAPPL="${PH_RUNAPP:0:4}"
declare -l PH_STOPAPPL="${PH_STOPAPP:0:4}"

OPTIND="1"

while getopts h PH_OPTION 2>/dev/null
do
        case "$PH_OPTION" in *)
                >&2 printf "\n\033[36m%s%s%s%s\033[0m\n" "Usage : $PH_STOPAPPL" "to" "$PH_RUNAPPL" ".sh | -h"
                >&2 printf "\n"
                >&2 printf "%3s%s\n" "" "Where -h displays this usage"
                >&2 printf "%9s%s\n" "" "- Running this script without parameters will stop an instance of '$PH_STOPAPP' running on it's allocated TTY if"
		>&2 printf "%9s%s\n" ""	"  the currently active TTY is the TTY allocated to '$PH_STOPAPP'"
		>&2 printf "%9s%s\n" "" "  If successful, a new instance of '$PH_RUNAPP' will be started on it's allocated TTY and that TTY will become the active TTY"
                >&2 printf "%12s%s\n" "" "- The first unallocated TTY will be automatically assigned to any application without a TTY that attempts to start"
                >&2 printf "%12s%s\n" "" "- A TTY is only deallocated when an application is removed from PieHelper"
                >&2 printf "%12s%s\n" "" "- If an application in need of a TTY attempts to start but all TTY's are already allocated, startup will fail"
                >&2 printf "%12s%s\n" "" "- Persistence will be taken into account when stopping '$PH_STOPAPP' since the stop command is being issued indirectly"
                >&2 printf "%12s%s\n" "" "- At any application start, all other running integrated applications will first be stopped"
                >&2 printf "%12s%s\n" "" "  Two exceptions to this rule exist :"
                >&2 printf "%15s%s\n" "" "- PieHelper starting on a pseudo-terminal will never stop running applications"
                >&2 printf "%15s%s\n" "" "- Applications marked as persistent remain online"
                >&2 printf "%12s%s\n" "" "- Additionally, the following rules apply to the stop of '$PH_STOPAPP' :"
                >&2 printf "%15s%s\n" "" "- If no active instance of '$PH_STOPAPP' can be found on it's allocated TTY or"
                >&2 printf "%15s%s\n" "" "  the TTY for '$PH_STOPAPP' cannot be determined, stop will be skipped but succeed with a warning"
                >&2 printf "%12s%s\n" "" "- Additionally, the following rules apply to the start of '$PH_RUNAPP' :"
		>&2 printf "%15s%s\n" "" "- If a persistent '$PH_RUNAPP' instance is already running on that TTY, that TTY will become the active TTY"
                >&2 printf "%15s%s\n" "" "- If a non-persistent '$PH_RUNAPP' instance is already running on that TTY, startup will fail"
                >&2 printf "\n"
                OPTIND="$PH_OLDOPTIND"
		OPTARG="$PH_OLDOPTARG"
		exit 1 ;;
        esac
done
OPTIND="$PH_OLDOPTIND"
OPTARG="$PH_OLDOPTARG"

PH_STOPAPP_TTY="$(ph_get_app_tty_from_app_name "$PH_STOPAPP")"
PH_FG_CONSOLE="$("$PH_SUDO" fgconsole 2>/dev/null)"
if [[ "$PH_FG_CONSOLE" -ne "$PH_STOPAPP_TTY" ]]
then
	printf "\n\033[36m%s\033[0m\n" "- Executing '$PH_STOPAPP' stop action prechecks"
	ph_set_result -r 1 -m "Currently active TTY allocated to '$PH_STOPAPP' is mandatory for '$PH_STOPAPP' stop"
	ph_show_result
	exit 1
fi
"stop$PH_STOPAPPL.sh" || exit "$?"
"start$PH_RUNAPPL.sh"
exit "$?"
